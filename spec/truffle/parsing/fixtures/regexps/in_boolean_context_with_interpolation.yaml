subject: "Regexp"
description: "Regexp literal in boolean context with interpolation (e.g. condition in if, while, etc)"
notes: >
  Is represented as a method call `/.../ =~ $_`, that's in this example as /foo #{bar} baz/.=~($_)
  
  Interpolation is handled with nodes:
    - InterpolatedRegexpNode
    - InterpolatedRegexpNodeFactory$RegexpBuilderNodeGen
focused_on_node: "org.truffleruby.language.dispatch.RubyCallNode"
ruby: |
  /foo #{bar} baz/ ? 1 : 2
ast: |
  RubyCallNode
      attributes:
          descriptor = org.truffleruby.language.arguments.NoKeywordArgumentsDescriptor@...
          dispatchConfig = PROTECTED
          emptyKeywordsProfile = false
          flags = 1
          isAttrAssign = false
          isSafeNavigation = false
          isSplatted = false
          isVCall = false
          lastArgIsNotHashProfile = false
          methodName = "=~"
          notEmptyKeywordsProfile = false
          notRuby2KeywordsHashProfile = false
      children:
          arguments = [
              ReadGlobalVariableNodeGen
                  attributes:
                      flags = 0
                      name = "$_"
                  children:
                      lookupGlobalVariableStorageNode =
                          LookupGlobalVariableStorageNodeGen
                              attributes:
                                  index = -1
                                  name = "$_"
          ]
          receiver =
              InterpolatedRegexpNode
                  attributes:
                      flags = 0
                      rubyStringLibrary = org.truffleruby.language.library.RubyStringLibrary$Cached@...
                  children:
                      asTruffleStringNode =
                          TruffleStringFactory$AsTruffleStringNodeGen
                      builderNode =
                          InterpolatedRegexpNodeFactory$RegexpBuilderNodeGen
                              attributes:
                                  options = RegexpOptions(kcode: NONE, kcodeDefault)
                              children:
                                  equalNode =
                                      TruffleStringFactory$EqualNodeGen
                      children = [
                          ToSNodeGen
                              children:
                                  valueNode_ =
                                      StringLiteralNode
                                          attributes:
                                              encoding = ASCII-8BIT
                                              flags = 0
                                              tstring = ""
                          ToSNodeGen
                              children:
                                  valueNode_ =
                                      StringLiteralNode
                                          attributes:
                                              encoding = UTF-8
                                              flags = 0
                                              tstring = foo 
                          ToSNodeGen
                              children:
                                  valueNode_ =
                                      RubyCallNode
                                          attributes:
                                              descriptor = org.truffleruby.language.arguments.NoKeywordArgumentsDescriptor@...
                                              dispatchConfig = PRIVATE
                                              emptyKeywordsProfile = false
                                              flags = 1
                                              isAttrAssign = false
                                              isSafeNavigation = false
                                              isSplatted = false
                                              isVCall = true
                                              lastArgIsNotHashProfile = false
                                              methodName = "bar"
                                              notEmptyKeywordsProfile = false
                                              notRuby2KeywordsHashProfile = false
                                          children:
                                              receiver =
                                                  SelfNode
                                                      attributes:
                                                          flags = 0
                          ToSNodeGen
                              children:
                                  valueNode_ =
                                      StringLiteralNode
                                          attributes:
                                              encoding = UTF-8
                                              flags = 0
                                              tstring =  baz
                      ]