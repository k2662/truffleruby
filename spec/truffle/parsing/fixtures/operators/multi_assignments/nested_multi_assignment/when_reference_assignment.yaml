subject: "Multi-assignment"
description: "When nested multi assignment / element reference (a[:key], b = foo)"
notes: >
yarp_specific: true # generate explicit NilLiteralNode (isImplicit = false)
focused_on_node: "org.truffleruby.core.array.MultipleAssignmentNode"
ruby: |
  (a[:key], b), c = []
ast: |
  MultipleAssignmentNode
      attributes:
          flags = 1
      children:
          preNodes = [
              MultipleAssignmentNode
                  attributes:
                      flags = 0
                  children:
                      preNodes = [
                          InlinedIndexSetNodeGen
                              attributes:
                                  assumptions = [Assumption(valid, name=set_trace_func is not used)]
                                  flags = 0
                                  parameters = org.truffleruby.language.dispatch.RubyCallNodeParameters@...
                              children:
                                  operand1Node_ =
                                      ObjectLiteralNode
                                          attributes:
                                              flags = 0
                                              object = :key
                                  operand2Node_ =
                                      NilLiteralNode
                                          attributes:
                                              flags = 0
                                  receiver_ =
                                      RubyCallNode
                                          attributes:
                                              descriptor = org.truffleruby.language.arguments.NoKeywordArgumentsDescriptor@...
                                              dispatchConfig = PRIVATE
                                              emptyKeywordsProfile = false
                                              flags = 0
                                              isAttrAssign = false
                                              isSafeNavigation = false
                                              isSplatted = false
                                              isVCall = true
                                              lastArgIsNotHashProfile = false
                                              methodName = "a"
                                              notEmptyKeywordsProfile = false
                                              notRuby2KeywordsHashProfile = false
                                          children:
                                              receiver =
                                                  SelfNode
                                                      attributes:
                                                          flags = 0
                          WriteFrameSlotNodeGen
                              attributes:
                                  frameSlot = 2 # b
                      ]
                      splatCastNode =
                          SplatCastNodeGen
                              attributes:
                                  conversionMethod = :to_ary
                                  copy = true
                                  flags = 0
                                  nilBehavior = ARRAY_WITH_NIL
              WriteFrameSlotNodeGen
                  attributes:
                      frameSlot = 3 # c
          ]
          rhsNode =
              ArrayLiteralNode$UninitialisedArrayLiteralNode
                  attributes:
                      flags = 0
                      language = org.truffleruby.RubyLanguage@...
          splatCastNode =
              SplatCastNodeGen
                  attributes:
                      conversionMethod = :to_ary
                      copy = true
                      flags = 0
                      nilBehavior = ARRAY_WITH_NIL