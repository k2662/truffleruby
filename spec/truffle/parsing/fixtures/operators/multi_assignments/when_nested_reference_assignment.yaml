subject: "Multi-assignment"
description: "When there is a nested element reference on the LHS (a[0][:key], b = foo )"
notes: >
  Attribute assignment is represented as a method call `v.foo=(nil)`
yarp_specific: true # generate explicit NilLiteralNode (isImplicit = false)
focused_on_node: "org.truffleruby.core.array.MultipleAssignmentNode"
ruby: |
  a[0][:key], b = 'foo', 'bar', 'baz'
ast: |
  MultipleAssignmentNode
      attributes:
          flags = 1
      children:
          preNodes = [
              InlinedIndexSetNodeGen
                  attributes:
                      assumptions = [Assumption(valid, name=set_trace_func is not used)]
                      flags = 0
                      parameters = org.truffleruby.language.dispatch.RubyCallNodeParameters@...
                  children:
                      operand1Node_ =
                          ObjectLiteralNode
                              attributes:
                                  flags = 0
                                  object = :key
                      operand2Node_ =
                          NilLiteralNode
                              attributes:
                                  flags = 0
                      receiver_ =
                          InlinedIndexGetNodeGen
                              attributes:
                                  assumptions = [Assumption(valid, name=set_trace_func is not used)]
                                  flags = 0
                                  parameters = org.truffleruby.language.dispatch.RubyCallNodeParameters@...
                              children:
                                  leftNode_ =
                                      RubyCallNode
                                          attributes:
                                              descriptor = org.truffleruby.language.arguments.NoKeywordArgumentsDescriptor@...
                                              dispatchConfig = PRIVATE
                                              emptyKeywordsProfile = false
                                              flags = 0
                                              isAttrAssign = false
                                              isSafeNavigation = false
                                              isSplatted = false
                                              isVCall = true
                                              lastArgIsNotHashProfile = false
                                              methodName = "a"
                                              notEmptyKeywordsProfile = false
                                              notRuby2KeywordsHashProfile = false
                                          children:
                                              receiver =
                                                  SelfNode
                                                      attributes:
                                                          flags = 0
                                  rightNode_ =
                                      IntegerFixnumLiteralNode
                                          attributes:
                                              flags = 0
                                              value = 0
              WriteFrameSlotNodeGen
                  attributes:
                      frameSlot = 2 # b
          ]
          rhsNode =
              ArrayLiteralNode$UninitialisedArrayLiteralNode
                  attributes:
                      flags = 0
                      language = org.truffleruby.RubyLanguage@...
                  children:
                      values = [
                          StringLiteralNode
                              attributes:
                                  encoding = UTF-8
                                  flags = 0
                                  tstring = foo
                          StringLiteralNode
                              attributes:
                                  encoding = UTF-8
                                  flags = 0
                                  tstring = bar
                          StringLiteralNode
                              attributes:
                                  encoding = UTF-8
                                  flags = 0
                                  tstring = baz
                      ]
          splatCastNode =
              SplatCastNodeGen
                  attributes:
                      conversionMethod = :to_ary
                      copy = true
                      flags = 0
                      nilBehavior = ARRAY_WITH_NIL