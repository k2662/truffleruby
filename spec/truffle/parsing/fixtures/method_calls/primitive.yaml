subject: "Method call"
description: "Primitive method"
notes: >
  Primitive is replaced with a node implementing this method.
  
  Focus on the top node instead of a particular Primitive method implementation.
focused_on_node: "org.truffleruby.language.RubyTopLevelRootNode"
ruby: |
  # truffleruby_primitives: true
  
  Primitive.nil?(42)
ast: |
  RubyTopLevelRootNode
      attributes:
          arityForCheck = Arity{preRequired = 0, optional = 0, hasRest = true, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}
          callTarget = <top (required)>
          checkArityProfile = false
          frameDescriptor = FrameDescriptor@...{#0:(self), #1:%$~_}
          instrumentationBits = 0
          keywordArguments = false
          localReturnProfile = false
          lock = java.util.concurrent.locks.ReentrantLock@...[Unlocked]
          matchingReturnProfile = false
          nextProfile = false
          nonMatchingReturnProfile = false
          polyglotRef = org.truffleruby.RubyLanguage@...
          retryProfile = false
          returnID = org.truffleruby.language.control.ReturnID@...
          sharedMethodInfo = SharedMethodInfo(staticLexicalScope =  :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}, originName = <top (required)>, blockDepth = 0, parseName = <top (required)>, notes = null, argumentDescriptors = null)
          split = HEURISTIC
      children:
          body =
              SequenceNode
                  attributes:
                      flags = 12
                  children:
                      body = [
                          WriteLocalVariableNode
                              attributes:
                                  flags = 0
                                  frameSlot = 0 # (self)
                              children:
                                  valueNode =
                                      ProfileArgumentNodeGen
                                          attributes:
                                              flags = 0
                                          children:
                                              childNode_ =
                                                  ReadSelfNode
                                                      attributes:
                                                          flags = 0
                          TypeNodesFactory$IsNilNodeFactory$IsNilNodeGen
                              attributes:
                                  flags = 0
                              children:
                                  argumentNodes0_ =
                                      IntegerFixnumLiteralNode
                                          attributes:
                                              flags = 0
                                              value = 42
                      ]