subject: "Return"
description: "return operator in a block in a module definition body"
notes: >
  Is represented by InvalidReturnNode node
focused_on_node: "org.truffleruby.language.objects.RunModuleDefinitionNode"
ruby: |
  module Foo
    1.times do
      return 42
    end
  end
ast: |
  RunModuleDefinitionNode
      attributes:
          flags = 1
          moduleBodyDefinition = ModuleBodyDefinition(name = <module:Foo>, sharedMethodInfo = SharedMethodInfo(staticLexicalScope =  :: null :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}, originName = <module:Foo>, blockDepth = 0, parseName = <module:Foo>, notes = null, argumentDescriptors = null), callTarget = <module:Foo>, staticLexicalScope =  :: null :: Object, dynamicLexicalScopes = null)
      children:
          callModuleDefinitionNode =
              DefaultIndirectCallNode
          definingModule =
              DefineModuleNodeGen
                  attributes:
                      flags = 0
                      name = "Foo"
                  children:
                      lexicalParentModuleNode_ =
                          LexicalScopeNode
                              attributes:
                                  flags = 0
                                  lexicalScope =  :: Object
      call targets:
          RubyRootNode
              attributes:
                  callTarget = <module:Foo>
                  frameDescriptor = FrameDescriptor@...{#0:(self), #1:%$~_, #2:%frame_on_stack_marker_0}
                  instrumentationBits = 0
                  lock = java.util.concurrent.locks.ReentrantLock@...[Unlocked]
                  polyglotRef = org.truffleruby.RubyLanguage@...
                  returnID = MODULE_BODY
                  sharedMethodInfo = SharedMethodInfo(staticLexicalScope =  :: null :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}, originName = <module:Foo>, blockDepth = 0, parseName = <module:Foo>, notes = null, argumentDescriptors = null)
                  split = NEVER
              children:
                  body =
                      SequenceNode
                          attributes:
                              flags = 12
                          children:
                              body = [
                                  WriteLocalVariableNode
                                      attributes:
                                          flags = 0
                                          frameSlot = 0 # (self)
                                      children:
                                          valueNode =
                                              ProfileArgumentNodeGen
                                                  attributes:
                                                      flags = 0
                                                  children:
                                                      childNode_ =
                                                          ReadSelfNode
                                                              attributes:
                                                                  flags = 0
                                  InsideModuleDefinitionNode
                                      attributes:
                                          flags = 0
                                      children:
                                          body =
                                              CatchBreakNode
                                                  attributes:
                                                      breakID = org.truffleruby.language.control.BreakID@...
                                                      flags = 1
                                                      isWhile = false
                                                  children:
                                                      body =
                                                          FrameOnStackNode
                                                              attributes:
                                                                  flags = 0
                                                                  frameOnStackMarkerSlot = 2
                                                              children:
                                                                  child =
                                                                      RubyCallNode
                                                                          attributes:
                                                                              descriptor = org.truffleruby.language.arguments.NoKeywordArgumentsDescriptor@...
                                                                              dispatchConfig = PROTECTED
                                                                              emptyKeywordsProfile = false
                                                                              flags = 0
                                                                              isAttrAssign = false
                                                                              isSafeNavigation = false
                                                                              isSplatted = false
                                                                              isVCall = false
                                                                              lastArgIsNotHashProfile = false
                                                                              methodName = "times"
                                                                              notEmptyKeywordsProfile = false
                                                                              notRuby2KeywordsHashProfile = false
                                                                          children:
                                                                              block =
                                                                                  BlockDefinitionNodeGen
                                                                                      attributes:
                                                                                          breakID = org.truffleruby.language.control.BreakID@...
                                                                                          callTargets = ProcCallTargets(callTargetForProc = block in <module:Foo>, callTargetForLambda = null, altCallTargetCompiler = ...$$Lambda$.../0x...@...)
                                                                                          flags = 0
                                                                                          frameOnStackMarkerSlot = 2
                                                                                          sharedMethodInfo = SharedMethodInfo(staticLexicalScope =  :: null :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}, originName = block in <module:Foo>, blockDepth = 1, parseName = block in <module:Foo>, notes = <module:Foo>, argumentDescriptors = [])
                                                                                          type = PROC
                                                                                      call targets:
                                                                                          RubyProcRootNode
                                                                                              attributes:
                                                                                                  callTarget = block in <module:Foo>
                                                                                                  frameDescriptor = FrameDescriptor@...{#0:(self)}
                                                                                                  instrumentationBits = 0
                                                                                                  lock = java.util.concurrent.locks.ReentrantLock@...[Unlocked]
                                                                                                  nextProfile = false
                                                                                                  polyglotRef = org.truffleruby.RubyLanguage@...
                                                                                                  redoProfile = false
                                                                                                  retryProfile = false
                                                                                                  returnID = MODULE_BODY
                                                                                                  sharedMethodInfo = SharedMethodInfo(staticLexicalScope =  :: null :: Object, arity = Arity{preRequired = 0, optional = 0, hasRest = false, postRequired = 0, keywordArguments = [], requiredKeywordArgumentsCount = 0, hasKeywordsRest = false}, originName = block in <module:Foo>, blockDepth = 1, parseName = block in <module:Foo>, notes = <module:Foo>, argumentDescriptors = [])
                                                                                                  split = HEURISTIC
                                                                                              children:
                                                                                                  body =
                                                                                                      SequenceNode
                                                                                                          attributes:
                                                                                                              flags = 12
                                                                                                          children:
                                                                                                              body = [
                                                                                                                  WriteLocalVariableNode
                                                                                                                      attributes:
                                                                                                                          flags = 0
                                                                                                                          frameSlot = 0 # (self)
                                                                                                                      children:
                                                                                                                          valueNode =
                                                                                                                              ProfileArgumentNodeGen
                                                                                                                                  attributes:
                                                                                                                                      flags = 0
                                                                                                                                  children:
                                                                                                                                      childNode_ =
                                                                                                                                          ReadSelfNode
                                                                                                                                              attributes:
                                                                                                                                                  flags = 0
                                                                                                                  InvalidReturnNode
                                                                                                                      attributes:
                                                                                                                          flags = 1
                                                                                                                      children:
                                                                                                                          value =
                                                                                                                              IntegerFixnumLiteralNode
                                                                                                                                  attributes:
                                                                                                                                      flags = 0
                                                                                                                                      value = 42
                                                                                                              ]
                                                                              receiver =
                                                                                  IntegerFixnumLiteralNode
                                                                                      attributes:
                                                                                          flags = 0
                                                                                          value = 1
                              ]